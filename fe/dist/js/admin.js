$(document).ready(function(){"use strict";function e(){E=$(".container"),H=$(".description"),P=$(".list-type"),B=H.find(".title"),K=E.find(".layer"),L=H.find(".list-item-area"),NavBar.init(),i(),P.on("click",'input[type="radio"]',i),H.on("click","a.register, a.edit, a.remove",d),K.on("click","a.cancel, a.done",J).on("change",'input[type="file"]',b),V.on("scroll",a)}function n(){return $.when(AdminService.getMetaInfo("conferences"),AdminService.getMetaInfo("tracks"),AdminService.getMetaInfo("speakers")).then(function(e,n,a){W.conferences=e[0].data.map(t),W.tracks=n[0].data.map(t),W.speakers=a[0].data.map(t),console.log(W)})}function t(e){return{text:e.name,value:e.idx}}function a(e){var n=document.body.scrollHeight==document.body.scrollTop+window.innerHeight;n&&X&&!Q&&(G++,X=!1,r(!0))}function i(){R=P.find("input:checked").val(),q=Utils.toFirstUpper(R).slice(0,-1),B.text(q+" list"),G=1,Q=!1,r(),n()}function r(e){return e||(G=1),AdminService.getListOf(R,{page:G}).then(function(n){return o(n,e)},u).always(F)}function o(e,n){console.log(R,e,G,Q);var t=!n&&!e.data.length;return Q=!e.data.length,t?L.html(Template.noItem()):void s(e.data,n)}function s(e,n){"sessions"===R&&e.forEach(function(e){e.timeInfo=Utils.getTimeInfoFromKey(e.time)});var t=f(e);n||L.html(""),L.append(t)}function c(e){return l("form",e||{})}function f(e){return l("item",e)}function l(e,n){var t={};return t[R]=n,Template[e](t)}function u(e){var n=q+" 조회 실패, "+e.responseJSON.message;alert(n)}function d(e){e.preventDefault(),e.stopPropagation();var n=$(e.target);if(n.hasClass("register"))m();else{var t=n.closest("section.item-container").data("id");n.hasClass("edit")?y(t):n.hasClass("remove")&&A(t)}}function m(){v({isRegister:!0})}function v(e){var n=c(e);if("tracks"===R||"sessions"===R){var t=k(R);K.html(n),g(t),p()}else K.html(n);K.slideDown()}function p(){K.find("select").each(function(e,n){var t=$(n),a=t.data("value");t.val(a)})}function g(e){if(e){var n=K.find("form");e.conference&&n.find("#item-id").html(e.conference),e.track&&n.find("#item-track-name").html(e.track),e.speaker&&n.find("#item-speaker-name").html(e.speaker)}}function h(e){return['<option value="',e.value,'">',e.text,"</options>"].join("")}function k(e){var n={};return"tracks"===e?n.conference=W.conferences.map(h).join(""):(n.track=W.tracks.map(h).join(""),n.speaker=W.speakers.map(h).join("")),n}function y(e){if(X)return X=!1,AdminService.get(R,{id:e}).then(S,w).always(F)}function S(e){console.log("detail ",R,e),v(e.data[0])}function w(e){var n=q+" 상세 정보 로딩 실패, "+e.responseJSON.message;alert(n)}function A(e){if(X){var n="관련된 데이터가 전부 삭제될 수 있습니다. 계속 진행하시겠습니까?";if(window.confirm(n))return X=!1,AdminService.delete(R,{id:e}).then(function(n){return N(e)},O).always(F)}}function N(e){alert("삭제 성공!");var n=['section[data-id="',e,'"]'].join("");L.find(n).remove()}function O(e){var n=q+" 삭제 실패, "+e.responseJSON.message;alert(n)}function J(e){e.preventDefault(),e.stopPropagation();var n=$(e.target);n.hasClass("cancel")?T():n.hasClass("create")?x(e):n.hasClass("edit")&&U(e)}function x(e){var n=$(e.target).closest("form"),t=Utils.getFormDataToJSON(n.serializeArray());return AdminService.create(R,t).then(C,I).always(F)}function C(e){var n=q+" 생성 성공!";alert(n),r(),T()}function I(e){var n=q+" 생성 실패, "+e.responseJSON.message;alert(n)}function T(){K.slideUp()}function U(e){if(X){var n=K.find("form"),t=Utils.getFormDataToJSON(n.serializeArray()),a=K.find(".form").data("id");return X=!1,AdminService.update(R,{id:a},t).then(function(e){return j(a,t)},D).always(F)}}function j(e,n){alert("정보 변경 성공!"),r(),T()}function D(e){var n=q+" 정보 변경 실패, "+e.responseJSON.message;alert(n)}function F(){X=!0}function b(e){var n=this.files[0];if(n&&X)return X=!1,FileService.upload(R,n).then(function(n){return M(e,n)},z).always(F)}function M(e,n){var t=$(e.target),a=t.siblings('[type="hidden"]'),i=t.siblings(".text-muted");a.val(n.message);var r=$('<img src="'+n.message+'" width="64px" height="64px" alt="">');i.html(r)}function z(e){var n="파일 업로드 실패, "+e.responseJSON.message;alert(n)}var H,P,B,E,K,L,R,q,G,Q,V=$(window),W=($(document),{conferences:{},tracks:{},speakers:{}}),X=!0;e()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
